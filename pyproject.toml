[tool.poetry]
name = "transcriber"
version = "0.1.0"
description = "A voice interface for interacting with an AI agent capable of executing tools"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourusername/transcriber"
repository = "https://github.com/yourusername/transcriber"
keywords = ["voice", "ai", "agent", "transcription", "tts", "stt"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.10"
aiofiles = "^23.0.0"
numpy = "^1.24.0"
ollama = "^0.1.7"
pydantic = "^2.5.0"
pydantic-settings = "^2.0.0"
rich = "^13.0.0"
sounddevice = "^0.4.6"
typer = {extras = ["all"], version = "^0.9.0"}
python-dotenv = "^1.0.0"
tenacity = "^8.2.0"
sqlalchemy = "^2.0.0"
aiosqlite = "^0.19.0"
webrtcvad = "^2.0.10"
psutil = "^5.9.0"

# Speech processing dependencies
gtts = "^2.5.0"  # Google Text-to-Speech (simple, cloud-based)
faster-whisper = "^1.0.0"  # Fast Whisper implementation for STT
pydub = "^0.25.1"  # For audio format conversion

# Vector database and embeddings for memory system
chromadb = "^0.4.0"  # Local vector database
sentence-transformers = "^2.2.0"  # Local embedding generation

# Optional: Additional options (uncomment if needed)
# openai-whisper = "^20231117"  # Official OpenAI Whisper (requires PyTorch)
edge-tts = "^6.1.0"  # Microsoft Edge TTS (better audio output)
# piper-tts = "^1.2.0"  # Requires piper-phonemize which needs FFmpeg

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.0"
black = "^24.3.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
transcriber = "run_transcriber:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "UP", "B", "C4", "SIM", "RUF"]
ignore = ["E501"]
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"